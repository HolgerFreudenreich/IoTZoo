@page "/ThingsToConnect"

@inherits ThingsToConnectPageBase

@using DataAccess.Services
@using IotZoo.Components
@using Domain.Pocos;

<MudText Typo="Typo.h5">Presentation of things that can be connected</MudText>
<br />
<br />
<MudText Typo="Typo.h6">Button</MudText>
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Inbound"
                     Topic="/button/<index>/push_counter"
                     Description="Button with <index> was pushed."
                     ExamplePayload="push counter">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/button/<index>/set_push_counter"
                     Description="Sets how often the button was pushed."
                     ExamplePayload="0">
</KnownTopicComponent>
<br />
<br />
<MudText Typo="Typo.h6">Switch</MudText>
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Inbound"
                     Topic="/switch/<index>/on"
                     Description="Switch with <index> was turned on."
                     ExamplePayload="15697 (milliseconds since starting the Microcontroller)">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Inbound"
                     Topic="/switch/<index>/off"
                     Description="Switch with <index> was turned off."
                     ExamplePayload="16124 (milliseconds since starting the Microcontroller)">
</KnownTopicComponent>
<br />
<MudText Typo="Typo.h6">DS18B20 Temperature Sensor</MudText>
<br />
<MudText>Measures Temperatures from -55°C to +125°C with ±0.5°C Accuracy from -10°C to +85°C</MudText>
<br />
<MudText>You can connect up to 64 sensors in series. You can change the sending interval in the microcontroller settings. The default setting is every 20 seconds.</MudText>
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Inbound"
                     Topic="/ds18b20/temperature/<index>/celsius"
                     Description="The Temperature of Sensor <index> in °C."
                     ExamplePayload="22.1">
</KnownTopicComponent>
<br />
<MudLink OnClick="@(() => OpenBrowserTab("https://www.analog.com/media/en/technical-documentation/data-sheets/DS18B20.pdf"))">Datasheet (External Link)</MudLink>
<br />
<br />
<MudDivider />
<br />
<br />
<MudText Typo="Typo.h6">HC-SR 501 Motion Detector</MudText>
<br />
<MudText>Motion sensing range: Less than 120 degree within 7 meters.</MudText>
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Inbound"
                     Topic="/motion_detector/<index>/triggered"
                     Description="Motion detector <index> triggered. Payload: Trigger counter"
                     ExamplePayload="34">
</KnownTopicComponent>
<br />
<MudLink OnClick="@(() => OpenBrowserTab("https://www.mpja.com/download/31227sc.pdf"))">Datasheet (External Link)</MudLink>
<br />
<br />
<MudDivider />
<br />
<br />
<MudText Typo="Typo.h6">HW-040 Rotary Encoder</MudText>
<br />
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Inbound"
                     Topic="/rotary_encoder/<index>/value"
                     Description="Value of Rotary encoder <index> changed."
                     ExamplePayload="58">
</KnownTopicComponent>

<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/rotary_encoder/<index>/set_value"
                     Description="Sets the value of the rotary encoder <index>."
                     ExamplePayload="58">
</KnownTopicComponent>

<KnownTopicComponent MessageDirection="MessageDirection.Inbound"
                     Topic="/rotary_encoder/<index>/button_pressed"
                     Description="Button of rotary encoder <index> has been pressed. Example payload: Millis of the ESP32."
                     ExamplePayload="58411">
</KnownTopicComponent>
<br />
<br />
<MudDivider />
<br />
<br />
<MudText Typo="Typo.h6">4x4 Button Matrix</MudText>
<br />
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Inbound"
                     Topic="/button_matrix/<index>/toggle_button/<button_char>"
                     Description="Status of button <button_char> has changed. Payload: PRESSED | HOLD | RELEASED"
                     ExamplePayload="PRESSED">
</KnownTopicComponent>

<KnownTopicComponent MessageDirection="MessageDirection.Inbound"
                     Topic="/button_matrix/<index>/toggle_button/<button_char>/pressed"
                     Description="Button <button_char> has been pressed. Payload: Millis() of the ESP32."
                     ExamplePayload="343231">
</KnownTopicComponent>

<KnownTopicComponent MessageDirection="MessageDirection.Inbound"
                     Topic="/button_matrix/<index>/toggle_button/<button_char>/hold"
                     Description="Button <button_char> has been hold. Payload: Millis() of the ESP32."
                     ExamplePayload="344231">
</KnownTopicComponent>

<KnownTopicComponent MessageDirection="MessageDirection.Inbound"
                     Topic="/button_matrix/<index>/toggle_button/<button_char>/released"
                     Description="Button <button_char> was released. Payload: Millis() of the ESP32."
                     ExamplePayload="345231">
</KnownTopicComponent>
<br />
<br />
<MudDivider />
<br />
<br />
<MudText Typo="Typo.h6">TM1637 4 digit display</MudText>
<br />
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/tm1637_4/<display index>/number"
                     Description="integer value or time value (example: 16:37). Send clear to clear the display."
                     ExamplePayload="1234">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/tm1637_4/<display index>"
                     ExamplePayload="{'device_index': 0, 'number'': 7, 'leading_zero': false, 'display_length': 4, 'position': 0}">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/tm1637_4/<display index>/text"
                     Description="text. Send clear to clear the display."
                     ExamplePayload="-HI-">
</KnownTopicComponent>
<br />
<br />
<MudDivider />
<br />
<br />
<MudText Typo="Typo.h6">TM1637 6 digit display</MudText>
<br />
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/tm1637_6/<display index>/number"
                     Description="integer value or time value (example: 16:37:12). Send clear to clear the display."
                     ExamplePayload="123456">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/tm1637_6/<display index>"
                     ExamplePayload="{'device_index': 0, 'number'': 7, 'leading_zero': false, 'display_length': 6, 'position': 0}">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/tm1637_6/<display index>/text"
                     Description="text. Send clear to clear the display."
                     ExamplePayload="- HI -">
</KnownTopicComponent>
<br />
<br />
<MudDivider />
<br />
<br />
<MudText Typo="Typo.h6">SD1306 oled display</MudText>
<br />
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/oled/<display index>/line/0/text"
                     Description="Text for the first line."
                     ExamplePayload="Text 1">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/oled/<display index>/line/1/text"
                     Description="Text for the second line."
                     ExamplePayload="Text 2">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/oled/<display index>/line/2/text"
                     Description="Text for the third line."
                     ExamplePayload="Text 3">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/oled/<display index>/line/3/text"
                     Description="Text for the fourth line."
                     ExamplePayload="Text 4">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/oled/<display index>/line/4/text"
                     Description="Text for the fifth line."
                     ExamplePayload="Text 5">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/oled/<display index>/line/5/text"
                     Description="Text for the sixth line."
                     ExamplePayload="Text 6">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/oled/<display index>/invert"
                     Description="Inverts the display"
                     ExamplePayload="1: invert; 0: normal/invert back">
</KnownTopicComponent>
<br />
<br />
<MudDivider />
<br />
<br />
<MudText Typo="Typo.h6">LCD1602, LCD1604, LCD2002, LCD2004 display</MudText>
<br />
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/lcd160x/<display index>"
                     Description="Payload: {'text': 'IoT Zoo', 'clear': true, 'x':1, 'y': 0}">
</KnownTopicComponent>
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/lcd160x/<display index>/backlight"
                     Description="Payload: 0 (off); 1 (on)">
</KnownTopicComponent>
<br />
<br />
<MudDivider />
<br />
<br />
<MudText Typo="Typo.h6">LEDS (RED, YELLOW, GREEN)</MudText>
<br />
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/traffic_light/<index>"
                     Description="Payload: To turn green led on (and yellow and red off): g, 0, green.">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/traffic_light/<index>"
                     Description="Payload: To turn yellow led on (and green and red off): y, 1, yellow.">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/traffic_light/<index>"
                     Description="Payload: Payload: To turn red led on (and green and yellow off): r, 2, red.">
</KnownTopicComponent>
<br />
<br />
<MudDivider />
<br />
<br />
<MudText Typo="Typo.h6">NEO Pixel WS2818</MudText>
<br />
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/neo/<display index>/setPixelColor"
                     ExamplePayload="{'color': 1106052, 'index': 15, 'length': 1, 'brightness': 50}">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/neo/<display index>/setPixelColorRgb"
                     ExamplePayload="{'r'': 0, 'g': 125, 'b': 0, 'index': 15, 'length': 1, 'brightness': 35}">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/neo/<display index>/setPixelColorHex"
                     ExamplePayload="{'color': '#10E084','index': 0, 'length': 10, 'brightness': 10}">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/neo/<display index>/setPixelColorHex"
                     ExamplePayload="{'color': '0x10E084','index': 0, 'length': 10, 'brightness': 10}">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/neo/<display index>/setPixelColorHex"
                     ExamplePayload="{'color': '10E084','index': 0, 'length': 10, 'brightness': 10}">
</KnownTopicComponent>
<MudText>"brightness": 0 clears the entire display.</MudText>
<br />
<br />
<MudDivider />
<br />
<br />
<MudText Typo="Typo.h6">Remote GPIO</MudText>
<br />
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/gpio/<index>"
                     ExamplePayload="0, LOW, OFF or 1, HIGH, ON or TOGGLE for toggling state">
</KnownTopicComponent>
<br />
<br />
<MudDivider />
<br />
<br />
<MudText Typo="Typo.h6">28BYJ-48 Stepper Motor</MudText>
<br />
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/stepper/<index>/actions"
                     ExamplePayload="[{'degrees': 5, 'rpm':2}, {'degrees': -15, 'rpm':2, 'start_delay': 200}]">
</KnownTopicComponent>
<MudText>start_delay is in ms.</MudText>
<KnownTopicComponent MessageDirection="MessageDirection.Inbound"
                     Topic="/stepper/<index>/action_done"
                     Description="Sends the action_id of completed action.">
</KnownTopicComponent>
<MudText>This topic is published for each action.</MudText>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="/stepper/<index>/abort"
                     Description="Abort all actions.">
</KnownTopicComponent>
<br />
<br />
<MudDivider />
<br />
<br />
<MudText Typo="Typo.h6">Led & Key</MudText>
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="ledAndKey/<device index>/led"
                     Description="Payload: 0 (off); 1 (on)">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="ledAndKey/<device index>/text"
                     Description="Text">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="ledAndKey/<device index>/reset"
                     ExamplePayload="reset">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Inbound"
                     Topic="ledAndKey/<device index>/button_row/state"
                     ExamplePayload="1 (button 0 pressed), 2 (button 1 pressed), 4, 8, 16, 32, 64, 128 and combinations">
</KnownTopicComponent>
<MudDivider />
<br />
<br />
<MudText Typo="Typo.h6">KY-25 Reed contact</MudText>
<br />
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Inbound"
                     Topic="rpm/<device index>"
                     ExamplePayload="1974">
</KnownTopicComponent>
<br />
<br />
<MudDivider />
<br />
<br />
<MudText Typo="Typo.h6">Interaction with Philips HUE</MudText>
<br />
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="<Namespace>/<Project>/hue/light/off"
                     Description="Turns the light off."
                     Payload="<LightId>"
                     ExamplePayload="9">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="<Namespace>/<Project>/hue/light/on"
                     Description="Turns the light on."
                     Payload="<LightId>"
                     ExamplePayload="9">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="<Namespace>/<Project>/hue/light/brighter"
                     Description="Increases the light level."
                     Payload="<LightId>"
                     ExamplePayload="9">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="<Namespace>/<Project>/hue/light/brightness"
                     Description="Adjusts the light level."
                     Payload="{ 'LightId': <LightId>, 'Brightness': 'input' }"
                     ExamplePayload="{ 'LightId': 9, 'Brightness': 75 }">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="<Namespace>/<Project>/hue/light/color"
                     Description="Color change."
                     Payload="{'LightId': <LightId>, 'Color': {'X': 0.2465, 'Y': 0.6425}"
                     ExamplePayload="{'LightId': 9, 'Color': {'X': 0.2465, 'Y': 0.6425} }">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="<Namespace>/<Project>/hue/light/color/blue"
                     Description="Color change to blue."
                     Payload="<LightId>"
                     ExamplePayload="9">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="<Namespace>/<Project>/hue/light/color/gold"
                     Description="Color change to gold."
                     Payload="<LightId>"
                     ExamplePayload="9">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="<Namespace>/<Project>/hue/light/color/green"
                     Description="Color change to green."
                     Payload="<LightId>"
                     ExamplePayload="9">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="<Namespace>/<Project>/hue/light/color/orange"
                     Description="Color change to orange."
                     Payload="<LightId>"
                     ExamplePayload="9">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="<Namespace>/<Project>/hue/light/color/purple"
                     Description="Color change to purple."
                     Payload="<LightId>"
                     ExamplePayload="9">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="<Namespace>/<Project>/hue/light/color/red"
                     Description="Color change to red."
                     Payload="<LightId>"
                     ExamplePayload="9">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="<Namespace>/<Project>/hue/light/color/white_cold"
                     Description="Color change to cold white."
                     Payload="<LightId>"
                     ExamplePayload="9">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic="<Namespace>/<Project>/hue/light/color/white_warm"
                     Description="Color change to warm white."
                     Payload="<LightId>"
                     ExamplePayload="9">
</KnownTopicComponent>
<br />
<br />
<MudDivider />
<br />
<br />
<MudText Typo="Typo.h6">Internal Topics</MudText>
<br />
<br />
<MudText>Topic: IOTZOO/SYSTEM/STARTED | Payload: none</MudText>
<KnownTopicComponent MessageDirection="MessageDirection.Inbound"
                     Topic="started"
                     Description="Microcontroller started">
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Inbound"
                     Topic=@TopicConstants.REGISTER_MICROCONTROLLER
                     Description="Registers all the known topics of the microcontroller.">
</KnownTopicComponent>
<br />
<br />
<MudText Typo="Typo.h5">Time based topics</MudText>
<br />
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic=@($"/{TopicConstants.EVERY_SECOND}")
                     Description="Fires every second."
                     ExamplePayload=@("""{"DateTime":"11.01.2025 18:36:29","Date":"11.01.2025","Time":"18:36:29","TimeShort":"18:36"}""")>
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic=@($"/{TopicConstants.EVERY_05_SECONDS}")
                     Description="Fires every 5 seconds."
                     ExamplePayload=@("""{"DateTime":"11.01.2025 18:36:25","Date":"11.01.2025","Time":"18:36:25","TimeShort":"18:36"}""")>
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic=@($"/{TopicConstants.EVERY_10_SECONDS}")
                     Description="Fires every 10 seconds."
                     ExamplePayload=@("""{"DateTime":"11.01.2025 18:36:30","Date":"11.01.2025","Time":"18:36:30","TimeShort":"18:36"}""")>
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic=@($"/{TopicConstants.EVERY_15_SECONDS}")
                     Description="Fires every 15 seconds."
                     ExamplePayload=@("""{"DateTime":"11.01.2025 18:36:30","Date":"11.01.2025","Time":"18:36:30","TimeShort":"18:36"}""")>
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic=@($"/{TopicConstants.EVERY_30_SECONDS}")
                     Description="Fires every 30 seconds."
                     ExamplePayload=@("""{"DateTime":"11.01.2025 18:36:30","Date":"11.01.2025","Time":"18:36:30","TimeShort":"18:36"}""")>
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic=@($"/{TopicConstants.EVERY_MINUTE}")
                     Description="Fires every minute."
                     ExamplePayload=@("""{"DateTime":"11.01.2025 18:36:00","Date":"11.01.2025","Time":"18:36:00","TimeShort":"18:36"}""")>
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic=@($"/{TopicConstants.EVERY_05_MINUTES}")
                     Description="Fires every 5 minutes."
                     ExamplePayload=@("""{"DateTime":"11.01.2025 18:40:00","Date":"11.01.2025","Time":"18:40:00","TimeShort":"18:40"}""")>
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic=@($"/{TopicConstants.EVERY_15_MINUTES}")
                     Description="Fires every 15 minutes."
                     ExamplePayload=@("""{"DateTime":"11.01.2025 18:45:00","Date":"11.01.2025","Time":"18:45:00","TimeShort":"18:45"}""")>
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic=@($"/{TopicConstants.EVERY_30_MINUTES}")
                     Description="Fires every 30 minutes."
                     ExamplePayload=@("""{"DateTime":"11.01.2025 19:00:00","Date":"11.01.2025","Time":"19:00:00","TimeShort":"19:00"}""")>
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic=@($"/{TopicConstants.EVERY_HOUR}")
                     Description="Fires every hour."
                     ExamplePayload=@("""{"DateTime":"11.01.2025 19:00:00","Date":"11.01.2025","Time":"19:00:00","TimeShort":"19:00"}""")>
</KnownTopicComponent>
<br />
<br />
<MudText Typo="Typo.h6">Sunrise and Sunset</MudText>
<br />
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic=@($"/{TopicConstants.SUNRISE_NOW}")
                     Description="Fires when the sun rises."
                     ExamplePayload=@("""{"DateTime":"11.01.2025 08:28:52","Date":"11.01.2025","Time":"08:28:52","TimeShort":"08:52"}""")>
</KnownTopicComponent>
<KnownTopicComponent MessageDirection="MessageDirection.Outbound"
                     Topic=@($"/{TopicConstants.SUNSET_NOW}")
                     Description="Fires when the sun goes down."
                     ExamplePayload=@("""{"DateTime":"11.01.2025 16:29:33","Date":"11.01.2025","Time":"16:29:33","TimeShort":"16:29"}""")>
</KnownTopicComponent>
<br />
